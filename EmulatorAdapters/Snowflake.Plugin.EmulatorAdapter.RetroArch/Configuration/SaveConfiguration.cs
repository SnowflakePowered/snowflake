using Snowflake.Configuration;
using Snowflake.Configuration.Attributes;

//autogenerated using generate_retroarch.py
namespace Snowflake.Plugin.EmulatorAdapter.RetroArch.Configuration
{
    public class SaveConfiguration : ConfigurationSection
    {
        [ConfigurationOption("autosave_interval", DisplayName = "Autosave Interval (seconds)", Increment = 10)]
        public int AutosaveInterval { get; set; } = 10;

        [ConfigurationOption("block_sram_overwrite", DisplayName = "Block SRAM Overwrite when loading savegames")]
        public bool BlockSramOverwrite { get; set; } = false;

        [ConfigurationOption("savestate_auto_index", DisplayName = "Automatically increment savestate index")]
        public bool SavestateAutoIndex { get; set; } = false;

        [ConfigurationOption("savestate_auto_load", DisplayName = "Load state on start")]
        public bool SavestateAutoLoad { get; set; } = false;

        [ConfigurationOption("savestate_auto_save", DisplayName = "Auto-save state on close")]
        public bool SavestateAutoSave { get; set; } = false;

        [ConfigurationOption("~flag_quick_resume", DisplayName = "Enable quick resume", Simple = true, Flag = true, Description = "Restores your game state from where you left off. Overrides savestate_auto_save and savestate_auto_load")]
        public bool FlagQuickResume { get; set; } = false;

        [ConfigurationOption("state_slot", DisplayName = "Default save state slot")]
        public int StateSlot { get; set; } = 0;

        public SaveConfiguration() : base("save", "Save Options")
        {

        }

    }
}
