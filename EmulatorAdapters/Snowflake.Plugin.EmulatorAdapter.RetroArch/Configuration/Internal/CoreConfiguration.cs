using Snowflake.Configuration;
using Snowflake.Configuration.Attributes;

//autogenerated using generate_retroarch.py
namespace Snowflake.Plugin.EmulatorAdapter.RetroArch.Configuration.Internal
{
    public class CoreConfiguration : ConfigurationSection
    {
        [ConfigurationOption("core_set_supports_no_game_enable", DisplayName = "Core Set Supports No Game Enable", Private = true)]
        public bool CoreSetSupportsNoGameEnable { get; set; } = true;
        [ConfigurationOption("core_specific_config", DisplayName = "Core Specific Config", Private = true)]
        public bool CoreSpecificConfig { get; set; } = false;
        [ConfigurationOption("core_updater_auto_extract_archive", DisplayName = "Core Updater Auto Extract Archive", Private = true)]
        public bool CoreUpdaterAutoExtractArchive { get; set; } = true;
        [ConfigurationOption("core_updater_buildbot_assets_url", DisplayName = "Core Updater Buildbot Assets Url", Private = true)]
        public string CoreUpdaterBuildbotAssetsUrl { get; set; } = "http://buildbot.libretro.com/assets/";
        [ConfigurationOption("core_updater_buildbot_url", DisplayName = "Core Updater Buildbot Url", Private = true)]
        public string CoreUpdaterBuildbotUrl { get; set; } = "http://buildbot.libretro.com/nightly/win-x86_64/latest/";

        [ConfigurationOption("load_dummy_on_core_shutdown", DisplayName = "Load Dummy On Core Shutdown")]
        public bool LoadDummyOnCoreShutdown { get; set; } = true;

        public CoreConfiguration() : base("core", "Core Options")
        {

        }

    }
}
