using Snowflake.Configuration;
using Snowflake.Plugin.EmulatorAdapter.RetroArch.Configuration;
using Snowflake.Plugin.EmulatorAdapter.RetroArch.Configuration.Internal;

namespace Snowflake.Plugin.EmulatorAdapter.RetroArch
{
    //autogenerated using generate_retroarch.py
    public class RetroArchConfiguration : ConfigurationCollection
    {
        public BuiltinConfiguration BuiltinConfiguration { get; set; }
        public MenuConfiguration MenuConfiguration { get; set; }
        public GameConfiguration GameConfiguration { get; set; }
        public RecordConfiguration RecordConfiguration { get; set; }
        public PauseConfiguration PauseConfiguration { get; set; }
        public LocationConfiguration LocationConfiguration { get; set; }
        public NetworkConfiguration NetworkConfiguration { get; set; }
        public LogConfiguration LogConfiguration { get; set; }
        public InputConfiguration InputConfiguration { get; set; }
        public NetplayConfiguration NetplayConfiguration { get; set; }
        public XmbConfiguration XmbConfiguration { get; set; }
        public StdinConfiguration StdinConfiguration { get; set; }
        public CoreConfiguration CoreConfiguration { get; set; }
        public CameraConfiguration CameraConfiguration { get; set; }
        public BundleConfiguration BundleConfiguration { get; set; }
        public RewindConfiguration RewindConfiguration { get; set; }
        public SaveConfiguration SaveConfiguration { get; set; }
        public UserConfiguration UserConfiguration { get; set; }
        public ThreadedConfiguration ThreadedConfiguration { get; set; }
        public DirectoryConfiguration DirectoryConfiguration { get; set; }
        public UiConfiguration UiConfiguration { get; set; }
        public VideoConfiguration VideoConfiguration { get; set; }
        public AudioConfiguration AudioConfiguration { get; set; }
        public FramethrottleConfiguration FrametrottleConfiguration { get; set; }
        public ConfigConfiguration ConfigConfiguration { get; set; }

        public RetroArchConfiguration() : base(new KeyValuePairConfigurationSerializer(BooleanMapping.LowercaseBooleanMapping, "nul", "="), "retroarch.cfg")
        {

        }
    }
}

