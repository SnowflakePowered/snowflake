# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

name: $(Date:yyyyMMdd)$(Rev:-rr)

trigger:
- master

variables:
  BUILD_NUMBER: '$(Build.BuildNumber)'
  STAGING: '$(Build.ArtifactStagingDirectory)'
  DOTNET_CLI_TELEMETRY_OPTOUT: 1

jobs:
- job: Linux
  displayName: Test and run code coverage on Linux
  condition: and(succeeded(), eq(variables.os, 'Linux'), not(variables['build.skiptest']))
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - template: azure-test.yml  # Template reference
    parameters:
      os: Linux

- job: LinuxPackage
  displayName: Build and package artifacts on Linux
  condition: and(succeeded(), eq(variables.os, 'Linux'), not(variables['build.skippack']))
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - template: azure-pack.yml  # Template reference
    parameters:
      os: Linux

- job: Windows
  displayName: Test and run code coverage on Windows
  pool:
    vmImage: 'windows-2022'
  condition: and(succeeded(), eq(variables.os, 'Windows_NT'), not(variables['build.skiptest']))
  steps:
  - template: azure-test.yml  # Template reference
    parameters:
      os: Windows_NT
  - template: azure-codecov.yml

- job: WindowsPackage
  displayName: Build and package artifacts on Windows
  pool:
    vmImage: 'windows-2022'
  condition: and(succeeded(), eq(variables.os, 'Windows_NT'), not(variables['build.skippack']))
  steps:
  - template: azure-pack.yml  # Template reference
    parameters:
      os: Windows_NT
  - template: azure-codecov.yml

  - task: NuGetCommand@2
    displayName: 'Publish framework packages to snowflake-nightly'
    inputs:
      command: push
      nuGetFeedType: external
      publishFeedCredentials: 'snowflake-nightly'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
