version: 0.2.{build}
os: Visual Studio 2015
branches:
  # whitelist
  only:
    - master
skip_tags: true
clone_depth: 50
test:
  assemblies:
    - Snowflake.Framework.Tests.dll
configuration: Debug
# Fix line endings on Windows
init:
  - git config --global core.autocrlf true
#build:
#  project: src/Snowflake.sln
#  parallel: true
#  publish_nuget: true
#  publish_nuget_symbols: true
#  verbosity: minimal
environment:
    COVERALLS_REPO_TOKEN:
      secure: nBi3LwnqgslaH8hbsvjnWTqpe/UbKn705TJujxqJwtcL5OLGfcydM8AnVyld6Ngu
    CoverityProjectToken:
      secure: 5cuY6qLcjz85TBpjs2Ba9B8QKKT5XuvQse3pnVmk8wo=
    CoverityNotificationEmail:
      secure: YObG6alHbjgc0M1b5aIThLfeiTS18PFiFnIjEcSNqa0=
    PATH: C:\Program Files (x86)\MSBuild\14.0\Bin;%PATH%
    GITHUB_BUILDBOT_TOKEN:
      secure: LZO5KXv/W++ny6vI/qhQ/NhscaTqhFAe+h3t0/sTMj44LlGeJi3n7nIR9b8KXXHr
cache:
  - packages -> **\packages.config
  
install:
    - nuget update -self
    - nuget install OpenCover -ExcludeVersion
 #   - nuget install xunit.runner.console -Version 2.1.0
 #   - nuget install EWSoftware.SHFB -ExcludeVersion
 #   - nuget install EWSoftware.SHFB.NETFramework -ExcludeVersion
    - choco install -y doxygen.portable
    - git submodule update --init --recursive
    - dotnet restore

#after_build:
#    - ps: |
#        if ($env:CoverityProjectToken)
#        {
#          cov-configure.exe --cs
#          cov-build.exe --dir cov-int msbuild /t:Rebuild Snowflake.sln
#          nuget.exe install PublishCoverity -ExcludeVersion
#          PublishCoverity\tools\PublishCoverity.exe compress -o coverity.zip -i cov-int
#          PublishCoverity\tools\PublishCoverity.exe publish -t "$env:CoverityProjectToken" -e "$env:CoverityNotificationEmail" -r "$env:APPVEYOR_REPO_NAME" -z coverity.zip -d "AppVeyor $env:APPVEYOR_BUILD_VERSION" --codeVersion "$env:APPVEYOR_REPO_COMMIT"
#        }
build_script:
    - dotnet build src/Snowflake.Framework.Tests
test_script:
    - rem Running Tests...
    - OpenCover\tools\OpenCover.Console.exe -target:"dotnet.exe" -targetargs:"test src/Snowflake.Framework.Tests -c Cover" -register:user -filter:"+[Snowflake.Framework*]* -[xunit*]*" -output:coverage.xml -oldStyle

after_test:
#    - rem Generating Sandcastle Documentation...
#    - msbuild "C:\projects\snowflake\Snowflake.Documentation.shfbproj" /verbosity:quiet /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll" > nul 2>&1
    - rem Generating Doxygen Documentation...
    - echo "PROJECT_NUMBER = %APPVEYOR_BUILD_VERSION%+git.%APPVEYOR_REPO_COMMIT%" >> snowflake.doxygen
    - doxygen snowflake.doxygen
    - rem Uploading Code Coverage Report to Codecov...
    - "SET PATH=C:\\Python34;C:\\Python34\\Scripts;%PATH%"
    - pip install codecov
    - codecov -f "coverage.xml"
    - rem Packing NuGet packages...
    - dotnet pack src\Snowflake.Framework.Primitives --version-suffix pre-alpha.%APPVEYOR_BUILD_NUMBER% -o nupkg
    - dotnet pack src\Snowflake.Framework.Utility --version-suffix pre-alpha.%APPVEYOR_BUILD_NUMBER% -o nupkg
    - dotnet pack src\Snowflake.Framework --version-suffix pre-alpha.%APPVEYOR_BUILD_NUMBER% -o nupkg
    - dotnet pack src\Snowflake.Framework.Services --version-suffix pre-alpha.%APPVEYOR_BUILD_NUMBER% -o nupkg

artifacts:
    - path: 'nupkg\Snowflake.Framework.Primitives.0.2.0-pre-alpha.%APPVEYOR_BUILD_NUMBER%.nupkg'
      name: Snowflake Framework Primitives
    - path: 'nupkg\Snowflake.Framework.Utility.0.2.0-pre-alpha.%APPVEYOR_BUILD_NUMBER%.nupkg'
      name: Snowflake Framework Utility
    - path: 'nupkg\Snowflake.Framework.0.2.0-pre-alpha.%APPVEYOR_BUILD_NUMBER%.nupkg'
      name: Snowflake Framework Implementation
    - path: 'nupkg\Snowflake.Framework.Services.0.2.0-pre-alpha.%APPVEYOR_BUILD_NUMBER%.nupkg'
      name: Snowflake Framework Services
    - path: doc
      name: Snowflake Generated Documentation (Doxygen)
      type: zip
deploy:
    - provider: NuGet
      server: https://www.myget.org/F/snowflake-nightly/api/v3/index.json
      api_key:
        secure: c0TSni4oM3D75P31isNFRu0z4whPsrvTAcu67iLlFmtvvrzopEI8Xj5qWk1pwMkj
      symbol_server: https://nuget.symbolsource.org/MyGet/snowflake-nightly
      skip_symbols: false
after_deploy:
    - rem Uploading Build Documentation
    - git init doc/html
    - git -C doc/html add --all
    - git -C doc/html commit -m "Upload documentation for build SnowflakePowered/snowflake@%APPVEYOR_REPO_COMMIT%"
    - git -C doc/html push --force -q https://snowflake-build-bot:%GITHUB_BUILDBOT_TOKEN%@github.com/SnowflakePowered-Support/snowflake-doc-doxygen.git master  
