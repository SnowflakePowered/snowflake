using Snowflake.Configuration;
using Snowflake.Configuration.Attributes;

//autogenerated using generate_retroarch.py

namespace Snowflake.Plugin.Emulators.RetroArch.Configuration
{
    /// <summary>
    ///     Netplay mode will probably be handled by the core through a separate API.
    /// </summary>
    [ConfigurationSection("netplay", "Netplay Options")]
    public interface NetplayConfiguration : IConfigurationSection<NetplayConfiguration>
    {
        [ConfigurationOption("netplay_client_swap_input", true, DisplayName = "Netplay Client Swap Input",
            Private = true)]
        bool NetplayClientSwapInput { get; set; }

        [ConfigurationOption("netplay_delay_frames", 0, DisplayName = "Netplay Delay Frames", Private = true)]
        int NetplayDelayFrames { get; set; }

        [ConfigurationOption("netplay_ip_address", "", DisplayName = "Netplay Ip Address", Private = true)]
        string NetplayIpAddress { get; set; }

        [ConfigurationOption("netplay_ip_port", 0, DisplayName = "Netplay Ip Port", Private = true)]
        int NetplayIpPort { get; set; }

        [ConfigurationOption("netplay_mode", false, DisplayName = "Netplay Mode", Private = true)]
        bool NetplayMode { get; set; }

        [ConfigurationOption("netplay_nickname", "", DisplayName = "Netplay Nickname", Private = true)]
        string NetplayNickname { get; set; }

        [ConfigurationOption("netplay_spectator_mode_enable", false, DisplayName = "Netplay Spectator Mode Enable")]
        bool NetplaySpectatorModeEnable { get; set; }
    }
}